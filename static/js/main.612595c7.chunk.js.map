{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGalleryList.module.css","components/Loader/Loader.module.css","App.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/ApiService/ApiService.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGalleryList.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","style","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormBtnlabel","onChange","currentTarget","value","SearchFormInput","autoComplete","autoFocus","placeholder","fetchImages","searchQuery","currentPage","axios","get","then","response","data","hits","ImageGalleryItem","images","onClickImage","map","index","id","webformatURL","largeImageURL","ImageGalleryItemImage","src","alt","onClick","ImageGallery","buttonAction","BtnContainer","Button","Spinner","LoaderContainer","color","height","width","timeout","modalRoot","document","querySelector","Modal","bigImage","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","target","ImageFinderApp","setImages","setCurrentPage","setSearchQuery","setError","loading","setLoading","showModal","setShowModal","largeImage","setLargeImage","options","prevImages","length","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","onFetchImages","toggleModal","shouldRenderOnLoadMore","App","Loader","prevPage","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.612595c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3icHg\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2RcE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnContainer\":\"Button_BtnContainer__3GMUN\",\"Button\":\"Button_Button__18H4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3Qprg\",\"Modal\":\"Modal_Modal__3P20P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGalleryList_ImageGallery__DEEwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoaderContainer\":\"Loader_LoaderContainer__G7_jk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1j8Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3Kzkn\",\"SearchForm\":\"Searchbar_SearchForm__3E5AT\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2iz2_\",\"SearchFormBtn\":\"Searchbar_SearchFormBtn__30p_P\",\"SearchFormBtnlabel\":\"Searchbar_SearchFormBtnlabel__hRLfj\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3q7v_\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport style from './Searchbar.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = event => {\r\n    setQuery(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      toast.error('Enter keyword to seach images!');\r\n      return;\r\n    }\r\n\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className={style.Searchbar}>\r\n        <form onSubmit={handleSubmit} className={style.SearchForm}>\r\n          <button type=\"submit\" className={style.SearchFormButton}>\r\n            <span className={style.SearchFormBtnlabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={handleChange}\r\n            value={query}\r\n            className={style.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\n// *** Old logic with class ***//\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     query: '',\r\n//   };\r\n\r\n//   handleChange = event => {\r\n//     this.setState({ query: event.currentTarget.value });\r\n//   };\r\n\r\n//   handleSubmit = event => {\r\n//     event.preventDefault();\r\n\r\n//     if (this.state.query.trim() === '') {\r\n//       toast.error('Enter keyword to seach images!');\r\n//       return;\r\n//     }\r\n\r\n//     this.props.onSubmit(this.state.query);\r\n//     this.setState({ query: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <header className={style.Searchbar}>\r\n//           <form onSubmit={this.handleSubmit} className={style.SearchForm}>\r\n//             <button type=\"submit\" className={style.SearchFormButton}>\r\n//               <span className={style.SearchFormBtnlabel}>Search</span>\r\n//             </button>\r\n\r\n//             <input\r\n//               onChange={this.handleChange}\r\n//               value={this.state.query}\r\n//               className={style.SearchFormInput}\r\n//               type=\"text\"\r\n//               autoComplete=\"off\"\r\n//               autoFocus\r\n//               placeholder=\"Search images and photos\"\r\n//             />\r\n//           </form>\r\n//         </header>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Searchbar;\r\n","import axios from 'axios';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1 }) => {\r\n  const ApiKey = '21859348-c38bd78951db790eb6ef65701';\r\n\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default fetchImages;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ images, onClickImage }) => {\r\n  return (\r\n    <>\r\n      {images.map(({ id, webformatURL, largeImageURL }, index) => (\r\n        <li key={index} className={style.ImageGalleryItem}>\r\n          <img\r\n            className={style.ImageGalleryItemImage}\r\n            src={webformatURL}\r\n            alt=\"\"\r\n            onClick={() => onClickImage({ largeImageURL })}\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n    }),\r\n  ),\r\n  onClickImage: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport style from './ImageGalleryList.module.css';\r\n\r\nconst ImageGallery = ({ images, onClickImage }) => {\r\n  return (\r\n    <ul className={style.ImageGallery}>\r\n      <ImageGalleryItem images={images} onClickImage={onClickImage} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Button.module.css';\r\n\r\nexport default function buttonAction({ onClick }) {\r\n  return (\r\n    <div className={style.BtnContainer}>\r\n      <button className={style.Button} type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nbuttonAction.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\n// class Button extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className={style.BtnContainer}>\r\n//         <button\r\n//           className={style.Button}\r\n//           type=\"button\"\r\n//           onClick={this.props.onClick}\r\n//         >\r\n//           Load more\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Button;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport style from './Loader.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={style.LoaderContainer}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#7db5e9\"\r\n        height={90}\r\n        width={90}\r\n        timeout={5000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ bigImage, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={style.Overlay} onClick={handleBackdropClick}>\r\n      <div className={style.Modal}>\r\n        <img src={bigImage} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  bigImage: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\n// export default class Modal extends Component {\r\n//   componentDidMount() {\r\n\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n\r\n//     window.removeEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   handleKeyDown = e => {\r\n//     if (e.code === 'Escape') {\r\n\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   handleBackdropClick = event => {\r\n\r\n//     if (event.currentTarget === event.target) {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return createPortal(\r\n//       <div className={style.Overlay} onClick={this.handleBackdropClick}>\r\n//         <div className={style.Modal}>\r\n//           <img src={this.props.bigImage} alt=\"\" />\r\n//         </div>\r\n//       </div>,\r\n//       modalRoot,\r\n//     );\r\n//   }\r\n// }\r\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport SearchBar from './components/Searchbar/Searchbar';\nimport fetchImages from './components/ApiService/ApiService.jsx';\nimport ImageGallery from './components/ImageGallery/ImageGalleryList';\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader.jsx';\nimport Modal from './components/Modal/Modal.jsx';\nimport style from './App.module.css';\n\nexport default function ImageFinderApp() {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImage, setLargeImage] = useState(false);\n\n  const onChangeQuery = query => {\n    if (query !== searchQuery) {\n      setImages([]);\n      setCurrentPage(1);\n      setSearchQuery(query);\n      setError(null);\n    }\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    function onFetchImages() {\n      const options = { searchQuery, currentPage, error };\n\n      setLoading(true);\n\n      fetchImages(options)\n        .then(response => {\n          setImages(prevImages => [...prevImages, ...response]);\n\n          if (response.length === 0) {\n            toast.error('No images with this keyword to be found!');\n          }\n        })\n        .catch(error => setError(error))\n        .finally(() => {\n          setLoading(false);\n          if (currentPage > 1) {\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            });\n          }\n        });\n    }\n\n    onFetchImages();\n  }, [currentPage, error, searchQuery]);\n\n  const onLoadMore = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const openModal = largeImageURL => {\n    setLargeImage(largeImageURL);\n    toggleModal();\n  };\n\n  const shouldRenderOnLoadMore = images.length > 0 && !loading;\n\n  return (\n    <div className={style.App}>\n      <SearchBar onSubmit={onChangeQuery} />\n\n      <ImageGallery images={images} onClickImage={openModal} />\n      {loading && <Loader />}\n      {shouldRenderOnLoadMore && <Button onClick={onLoadMore} />}\n\n      {showModal && (\n        <Modal onClose={toggleModal} bigImage={largeImage.largeImageURL} />\n      )}\n\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n}\n\n// ***Old version with class***///\n// export class App extends Component {\n//   state = {\n//     images: [],\n//     currentPage: 1,\n//     searchQuery: '',\n//     error: null,\n//     loading: false,\n//     showModal: false,\n//     largeImage: '',\n//     // status: 'idle',\n//   };\n\n//   componentDidUpdate(_, prevState) {\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       this.onFetchImages();\n//       // console.log('Image name changed');\n//       // console.log('prevState.searchQuery: ', prevState.searchQuery);\n//       // console.log('this.state.searchQuery: ', this.state.searchQuery);\n//     }\n\n//     if (\n//       prevState.currentPage !== this.state.currentPage &&\n//       this.state.currentPage > 2\n//     ) {\n//       window.scrollTo({\n//         top: document.documentElement.scrollHeight,\n//         behavior: 'smooth',\n//       });\n//     }\n//   }\n\n//   onChangeQuery = query => {\n//     this.setState({\n//       images: [],\n//       currentPage: 1,\n//       searchQuery: query,\n//       error: null,\n//     });\n//   };\n\n//   onFetchImages = () => {\n//     const { searchQuery, currentPage, error } = this.state;\n\n//     const options = { searchQuery, currentPage, error };\n\n//     this.setState({ loading: true });\n\n//     fetchImages(options)\n//       .then(response => {\n//         if (response.length === 0) {\n//           toast.error('No images with this keyword to be found!');\n//         }\n\n//         this.setState(prevState => ({\n//           images: [...prevState.images, ...response],\n//           currentPage: prevState.currentPage + 1,\n//         }));\n//       })\n//       .catch(error => this.setState({ error: error }))\n//       .finally(() => this.setState({ loading: false }));\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   openModal = modalImage => {\n//     console.log('Open Modal', modalImage);\n//     this.setState(() => ({ largeImage: modalImage }));\n//     this.toggleModal();\n//   };\n\n//   closeModal = () => {\n//     this.setState({ largeImage: '' });\n//     this.toggleModal();\n//   };\n\n//   render() {\n//     const { images, loading, showModal, largeImage } = this.state;\n\n//     const shouldRenderOnLoadMore = images.length > 0 && !loading;\n\n//     return (\n//       <div className={style.App}>\n//         <SearchBar onSubmit={this.onChangeQuery} />\n\n//         <ImageGallery images={images} onClickImage={this.openModal} />\n//         {loading && <Loader />}\n//         {shouldRenderOnLoadMore && <Button onClick={this.onFetchImages} />}\n\n//         {showModal && (\n//           <Modal\n//             onClose={this.toggleModal}\n//             bigImage={largeImage.largeImageURL}\n//           />\n//         )}\n\n//         <Toaster position=\"top-right\" />\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}